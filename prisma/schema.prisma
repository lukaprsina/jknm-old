generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DATABASE_DIRECT_URL")
}

model Article {
  id          Int      @id @default(autoincrement())
  title       String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  createdById String
  url         String   @unique
  content     String   @default("")
  createdBy   User     @relation(fields: [createdById], references: [id])

  @@index([title])
}

model UnpublishedArticle {
  id          Int      @id @default(autoincrement())
  title       String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  createdById String
  url         String   @unique
  content     String   @default("")
  createdBy   User     @relation(fields: [createdById], references: [id])

  @@index([title])
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id                String               @id @default(cuid())
  name              String?
  email             String?              @unique
  emailVerified     DateTime?
  image             String?
  accounts          Account[]
  published_posts   Article[]
  unpublished_posts UnpublishedArticle[]
  sessions          Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
